<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.CommentMapper">
    <resultMap id="CommentResult" type="Comment">
        <result column="id" property="id"/>
        <result column="userId" property="userId"/>
        <result column="articleId" property="articleId"/>
        <result column="commentContent" property="commentContent"/>
        <result column="date" property="date"/>
        <result column="articleAuthorId" property="articleAuthorId"/>
        <result column="state" property="state"/>
    </resultMap>

    <select id="list" parameterType="map" resultMap="CommentResult">
        select *
        from t_comment
        <where>
            <if test="userId!=null">
                and userId = #{userId}
            </if>
            <if test="articleId != null">
                and articleId=#{articleId}
            </if>
            <if test="articleAuthorId != null">
                and articleAuthorId=#{articleAuthorId}
            </if>
            <if test="state != null">
                and state=#{state}
            </if>
        </where>
        order by date desc
        <if test="start != null and size != null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="getTotal" parameterType="map" resultType="java.lang.Long">
        select count(*)
        from t_comment
        <where>
            <if test="userId!=null">
                and userId = #{userId}
            </if>
            <if test="articleId != null">
                and articleId=#{articleId}
            </if>
            <if test="articleAuthorId != null">
                and articleAuthorId=#{articleAuthorId}
            </if>
            <if test="state != null">
                and state=#{state}
            </if>
        </where>
    </select>

    <insert id="add" parameterType="Comment">
        insert into t_comment (userId, articleId, commentContent,date,articleAuthorId,state)
        values (#{userId}, #{articleId}, #{commentContent},now(),#{articleAuthorId},0);
    </insert>

    <delete id="deleteById" parameterType="integer">
        delete from t_comment where id=#{id}
    </delete>

    <update id="update" parameterType="Comment">
        update t_comment
        <set>
            <if test="state != null">
                state=#{state},
            </if>
        </set>
        where id=#{id}
    </update>

    <select id="findById" parameterType="integer" resultMap="CommentResult">
        select * from t_comment where id=#{id}
    </select>
</mapper>